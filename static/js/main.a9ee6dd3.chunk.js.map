{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","useState","magnitudeMessage","setMagnitudeMessage","percentMessage","setPercentMessage","initialPrice","setInitialPrice","quantity","setquantity","currentPrice","setcurrentPrice","resultMag","setResultMag","resultPercent","setResultPercent","className","htmlFor","onChange","event","target","value","type","name","id","alert","onClick","preventDefault","result","percent","Math","abs","isNaN","Number","toFixed","calculateResult","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"kNA+GeA,MA5Gf,WACE,MAAgDC,mBAAS,IAAzD,mBAAOC,EAAP,KAAyBC,EAAzB,KACA,EAA4CF,mBAAS,IAArD,mBAAOG,EAAP,KAAuBC,EAAvB,KACA,EAAwCJ,mBAAS,GAAjD,mBAAOK,EAAP,KAAqBC,EAArB,KACA,EAAgCN,mBAAS,GAAzC,mBAAOO,EAAP,KAAiBC,EAAjB,KACA,EAAwCR,mBAAS,GAAjD,mBAAOS,EAAP,KAAqBC,EAArB,KACA,EAAkCV,mBAAS,GAA3C,mBAAOW,EAAP,KAAkBC,EAAlB,KACA,EAA0CZ,mBAAS,GAAnD,mBAAOa,EAAP,KAAsBC,EAAtB,KAsBA,OACE,sBAAKC,UAAU,MAAf,UACE,wBAAQA,UAAU,aAAlB,SACE,oEAEF,iCACE,iCACE,wBAAOC,QAAQ,gBAAf,gDACsC,OAEtC,uBACEC,SAAU,SAACC,GACTZ,EAAgBY,EAAMC,OAAOC,QAE/BC,KAAK,SACLC,KAAK,gBACLC,GAAG,kBAEL,uBAAOP,QAAQ,WAAf,2CACA,uBACEC,SAAU,SAACC,GACLA,EAAMC,OAAOC,MAAQ,EACvBI,MAAM,gCAENhB,EAAYU,EAAMC,OAAOC,QAG7BC,KAAK,SACLC,KAAK,WACLC,GAAG,aAEL,uBAAOP,QAAQ,gBAAf,0CACA,uBACEC,SAAU,SAACC,GACTR,EAAgBQ,EAAMC,OAAOC,QAE/BC,KAAK,SACLC,KAAK,gBACLC,GAAG,kBAEL,wBACEE,QAAS,SAACP,GACRA,EAAMQ,iBA9DlB,WACE,IAAIC,EAASlB,EAAeF,EAAWF,EAAeE,EAClDqB,EAAWD,EAASpB,EAAWF,EAAgB,IAC/CsB,EAAS,GACXzB,EAAoB,QACpBE,EAAkB,aAClByB,KAAKC,IAAIH,KAETzB,EAAoB,UACpBE,EAAkB,cAGlBwB,EADEG,MAAMH,GACE,EAEAC,KAAKC,IAAIE,OAAOJ,EAAQK,QAAQ,KAE5CrB,EAAae,GACbb,EAAiBc,GA8CPM,IAHJ,0BASF,sBAAKnB,UAAU,aAAf,kBACQd,EADR,OAC8BU,EAD9B,cAC+CR,EAD/C,MACkE,IAC/DU,EAFH,WAKF,mCACE,qBAAIU,GAAG,mBAAP,UACE,6BACE,mBAAGR,UAAU,qBAAqBoB,KAAK,6BAAvC,sBAIF,6BACE,mBACEpB,UAAU,qBACVoB,KAAK,wDAFP,2BAQJ,oBAAGZ,GAAG,iBAAN,+BACqB,IACnB,mBAAGY,KAAK,gDAAR,6BC5FKC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,K","file":"static/js/main.a9ee6dd3.chunk.js","sourcesContent":["import \"./App.css\";\nimport { useState } from \"react\";\n\nfunction App() {\n  const [magnitudeMessage, setMagnitudeMessage] = useState(\"\");\n  const [percentMessage, setPercentMessage] = useState(\"\");\n  const [initialPrice, setInitialPrice] = useState(0);\n  const [quantity, setquantity] = useState(0);\n  const [currentPrice, setcurrentPrice] = useState(0);\n  const [resultMag, setResultMag] = useState(0);\n  const [resultPercent, setResultPercent] = useState(0);\n\n  function calculateResult() {\n    let result = currentPrice * quantity - initialPrice * quantity;\n    let percent = (result / quantity / initialPrice) * 100;\n    if (result < 0) {\n      setMagnitudeMessage(\"loss\");\n      setPercentMessage(\"Decrement\");\n      Math.abs(result);\n    } else {\n      setMagnitudeMessage(\"profit\");\n      setPercentMessage(\"Increment\");\n    }\n    if (isNaN(percent)) {\n      percent = 0;\n    } else {\n      percent = Math.abs(Number(percent.toFixed(3)));\n    }\n    setResultMag(result);\n    setResultPercent(percent);\n  }\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Stocks Calculator: Broke or Rock</h1>\n      </header>\n      <main>\n        <form>\n          <label htmlFor=\"initial-price\">\n            Price the stocks were purchased at:{\" \"}\n          </label>\n          <input\n            onChange={(event) => {\n              setInitialPrice(event.target.value);\n            }}\n            type=\"number\"\n            name=\"initial-price\"\n            id=\"initial-price\"\n          />\n          <label htmlFor=\"quantity\">Numbers of stocks purchased: </label>\n          <input\n            onChange={(event) => {\n              if (event.target.value < 0) {\n                alert(\"Quantity cannot be negative.\");\n              } else {\n                setquantity(event.target.value);\n              }\n            }}\n            type=\"number\"\n            name=\"quantity\"\n            id=\"quantity\"\n          />\n          <label htmlFor=\"current-price\">Current price of the stock: </label>\n          <input\n            onChange={(event) => {\n              setcurrentPrice(event.target.value);\n            }}\n            type=\"number\"\n            name=\"current-price\"\n            id=\"current-price\"\n          />\n          <button\n            onClick={(event) => {\n              event.preventDefault();\n              calculateResult();\n            }}\n          >\n            Calculate\n          </button>\n        </form>\n        <div className=\"output-div\">\n          Your {magnitudeMessage} is {resultMag} (â‚¹). {percentMessage} of{\" \"}\n          {resultPercent}%.\n        </div>\n      </main>\n      <footer>\n        <ul id=\"social-media-tab\">\n          <li>\n            <a className=\"social-media-links\" href=\"https://github.com/iHarryD\">\n              GitHub\n            </a>\n          </li>\n          <li>\n            <a\n              className=\"social-media-links\"\n              href=\"https://www.linkedin.com/in/prashant-kumar-a97251195/\"\n            >\n              LinkedIn\n            </a>\n          </li>\n        </ul>\n        <p id=\"portfolio-link\">\n          Website created by{\" \"}\n          <a href=\"https://iharryd.github.io/personal-portfolio/\">Harry</a>\n        </p>\n      </footer>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}